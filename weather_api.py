# #http://api.weatherapi.com/v1/forecast.json?key=61636f7026c1432ebc355947221907&q=Yekaterinburg&days=4&aqi=no&alerts=no
# #Ye - 1486209
from datetime import datetime
import requests
import locale
import pytz

locale.setlocale(locale.LC_ALL, "ru_RU")


# s_city = "Yekaterinburg"
# city_id = 0
# appid = "61636f7026c1432ebc355947221907"

################################################################################
def time_now_tz(current_tz):
    time_now = int(datetime.now(tz=current_tz).strftime('%H'))
    return time_now


################################################################################


################################################################################
#
# –ü–æ–≥–æ–¥–∞ –ø–æ —á–∞—Å–∞–º(–Ω–∞ 6 —á–∞—Å–æ–≤)
#
################################################################################
def hours_weather():
    s_city = "Yekaterinburg"
    appid = "61636f7026c1432ebc355947221907"
    temp_text_onHours = []
    hours_all = []
    temp_text = ''
    temp_msg = ''
    global weather_codes

    ekb_tz = pytz.timezone('Asia/Yekaterinburg')
    ###########################
    try:
        res = requests.get("https://api.weatherapi.com/v1/forecast.json",
                           params={
                               'key': appid,
                               'q': s_city,
                               'days': '2',
                               'aqi': 'no',
                               'alerts': 'no'
                           })
        data = res.json()
        # print('###################Hello###################')

        for i in data['forecast']['forecastday']:
            for j in i['hour']:
                hour_time = j['time']
                hour_tmp = j['temp_c']
                hour_feeling = j['feelslike_c']
                hour_is_day = j['is_day']
                hour_text = j['condition']['code']
                hour_rainChace = j['chance_of_rain']
                # hour_is_rain = j['will_it_rain']
                # hour_snowChace = j['chance_of_snow']

                ##—Ç–µ–∫—Å—Ç –ø–æ–≥–æ–¥—ã##
                for i in weather_codes:
                    if i['code'] == int(hour_text):
                        hour_text = i[str(hour_is_day)]
                        break
                ################

                hour_time_to_date = datetime.strptime(hour_time, '%Y-%m-%d %H:%M')
                now_utc = pytz.utc.localize(hour_time_to_date)
                ftime_now = datetime.strftime(now_utc, '%H:%M')

                ##–º–∞—Å—Å–∏–≤ –≤—Ä–µ–º–µ–Ω##
                ftime_all = datetime.strftime(now_utc, '%H')
                hours_all.append(int(ftime_all) + 7)
                # print(ftime_all)
                #################

                if hour_rainChace > 0:
                    ##–∑–∞–ø–∏—Å—å —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –≤—ã–≤–æ–¥ –≤ –º–∞—Å—Å–∏–≤##
                    temp_text = f'-------------------{ftime_now}-------------------\n' \
                                f'{hour_tmp}¬∞C, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {hour_feeling}¬∞C\n' \
                                f'{hour_text}\n' \
                                f'üåß –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–æ–∂–¥—è: {hour_rainChace}%\n' \
                                f'-------------------------------------------\n\n'
                    temp_text_onHours.append(temp_text)
                    ###################################
                else:
                    ##–∑–∞–ø–∏—Å—å —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –≤—ã–≤–æ–¥ –≤ –º–∞—Å—Å–∏–≤##
                    temp_text = f'-------------------{ftime_now}-------------------\n' \
                                f'{hour_tmp}¬∞C, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {hour_feeling}¬∞C\n' \
                                f'{hour_text}\n' \
                                f'-------------------------------------------\n\n'
                    temp_text_onHours.append(temp_text)
                    ###################################

        time_now = time_now_tz(ekb_tz)

        for i in range(time_now, time_now + 7):
            temp_msg += temp_text_onHours[i]

        return temp_msg

    ##############################
    except Exception as e:
        temp_text += '–ñ–¥–µ–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞..–í–∏–¥–∏–º–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç('
        print("–û—à–∏–±–∫–∞:", e)
        return temp_text
        pass


################################################################################
#
# –ü–æ–≥–æ–¥–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é(–Ω–∞ —Ç—Ä–∏ –¥–Ω—è –≤–ø–µ—Ä–µ–¥)
#
################################################################################
def weekday_weather():
    s_city = "Yekaterinburg"
    appid = "61636f7026c1432ebc355947221907"
    global will_it_rain
    temp_onWeek = []
    temp_text = ''
    temp_msg = ''
    try:
        res = requests.get("https://api.weatherapi.com/v1/forecast.json",
                           params={
                               'key': appid,
                               'q': s_city,
                               'days': '7',
                               'aqi': 'no',
                               'alerts': 'no'
                           })
        data = res.json()

        for i in data['forecast']['forecastday']:
            date_epoch_sec = i['date_epoch']
            date_weather_time = datetime.utcfromtimestamp(date_epoch_sec).strftime('%A, %d %B')

            date_max_temp = i['day']['maxtemp_c']
            date_min_temp = i['day']['mintemp_c']
            date_rain_chance = i['day']['daily_chance_of_rain']
            date_is_rain = will_it_rain[i['day']['daily_will_it_rain']]

            ##–∑–∞–ø–∏—Å—å —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –≤—ã–≤–æ–¥ –≤ –º–∞—Å—Å–∏–≤##
            if date_rain_chance > 0:
                temp_text = f'{date_weather_time} {date_is_rain}\n' \
                            f'–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–æ–∂–¥—è: {date_rain_chance}%\n' \
                            f'–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {date_max_temp}¬∞C\n' \
                            f'–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {date_min_temp}¬∞C\n' \
                            f'-------------------------------------------\n\n\n'
                temp_onWeek.append(temp_text)

            else:
                temp_text = f'{date_weather_time} {date_is_rain}\n' \
                            f'–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {date_max_temp}¬∞C\n' \
                            f'–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {date_min_temp}¬∞C\n' \
                            f'-------------------------------------------\n\n\n'
                temp_onWeek.append(temp_text)
            ###################################

        for i in range(3):
            temp_msg += temp_onWeek[i]

        return temp_msg

    except Exception as e:
        temp_text += '–ñ–¥–µ–º –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞..–í–∏–¥–∏–º–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç('
        print("Exception (find):", e)
        return temp_text
        pass


################################################################################


will_it_rain = [
    "‚òÄ ",  # –Ω–µ—Ç –¥–æ–∂–¥—è
    "üåß"  # –¥–æ–∂–¥—å
]

weather_codes = [
    {
        "code": 1000,
        "1": "–°–æ–ª–Ω–µ—á–Ω–æ ‚òÄ",  # –¥–µ–Ω—å
        "0": "–Ø—Å–Ω–æ üåî",  # –Ω–æ—á—å
        "icon": 113
    },
    {
        "code": 1003,
        "1": "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å üå§",
        "0": "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å üå§",
        "icon": 116
    },
    {
        "code": 1006,
        "1": "–û–±–ª–∞—á–Ω–æ ‚òÅ",
        "0": "–û–±–ª–∞—á–Ω–æ ‚òÅ",
        "icon": 119
    },
    {
        "code": 1009,
        "1": "–ü–∞—Å–º—É—Ä–Ω–æ ‚òÅ‚òÅ‚òÅ",
        "0": "–ü–∞—Å–º—É—Ä–Ω–æ ‚òÅ‚òÅ‚òÅ",
        "icon": 122
    },
    {
        "code": 1030,
        "1": "–î—ã–º–∫–∞",
        "0": "–î—ã–º–∫–∞",
        "icon": 143
    },
    {
        "code": 1063,
        "1": "–ú–µ—Å—Ç–∞–º–∏ –¥–æ–∂–¥—å üåß",
        "0": "–ú–µ—Å—Ç–∞–º–∏ –¥–æ–∂–¥—å üåß",
        "icon": 176
    },
    {
        "code": 1066,
        "1": "–ú–µ—Å—Ç–∞–º–∏ —Å–Ω–µ–≥ üå®",
        "0": "–ú–µ—Å—Ç–∞–º–∏ —Å–Ω–µ–≥ üå®",
        "icon": 179
    },
    {
        "code": 1069,
        "1": "–ú–µ—Å—Ç–∞–º–∏ –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º üåß",
        "0": "–ú–µ—Å—Ç–∞–º–∏ –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º üåß",
        "icon": 182
    },
    {
        "code": 1072,
        "1": "–ú–µ—Å—Ç–∞–º–∏ –∑–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å üåß",
        "0": "–ú–µ—Å—Ç–∞–º–∏ –∑–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å üåß",
        "icon": 185
    },
    {
        "code": 1087,
        "1": "–ú–µ—Å—Ç–∞–º–∏ –≥—Ä–æ–∑—ã üå©",
        "0": "–ú–µ—Å—Ç–∞–º–∏ –≥—Ä–æ–∑—ã üå©",
        "icon": 200
    },
    {
        "code": 1114,
        "1": "–ü–æ–∑—ë–º–æ–∫",
        "0": "–ü–æ–∑—ë–º–æ–∫",
        "icon": 227
    },
    {
        "code": 1117,
        "1": "–ú–µ—Ç–µ–ª—å üå™",
        "0": "–ú–µ—Ç–µ–ª—å üå™",
        "icon": 230
    },
    {
        "code": 1135,
        "1": "–¢—É–º–∞–Ω üå´",
        "0": "–¢—É–º–∞–Ω üå´",
        "icon": 248
    },
    {
        "code": 1147,
        "1": "–ü–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π —Ç—É–º–∞–Ω",
        "0": "–ü–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π —Ç—É–º–∞–Ω",
        "icon": 260
    },
    {
        "code": 1150,
        "1": "–ú–µ—Å—Ç–∞–º–∏ —Å–ª–∞–±–∞—è –º–æ—Ä–æ—Å—å üå¶",
        "0": "–ú–µ—Å—Ç–∞–º–∏ —Å–ª–∞–±–∞—è –º–æ—Ä–æ—Å—å üå¶",
        "icon": 263
    },
    {
        "code": 1153,
        "1": "–°–ª–∞–±–∞—è –º–æ—Ä–æ—Å—å üå¶",
        "0": "–°–ª–∞–±–∞—è –º–æ—Ä–æ—Å—å üå¶",
        "icon": 266
    },
    {
        "code": 1168,
        "1": "–ó–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å üåß",
        "0": "–ó–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å üåß",
        "icon": 281
    },
    {
        "code": 1171,
        "1": "–°–∏–ª—å–Ω–∞—è –∑–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å üåßüåßüåß",
        "0": "–°–∏–ª—å–Ω–∞—è –∑–∞–º–µ—Ä–∑–∞—é—â–∞—è –º–æ—Ä–æ—Å—å üåßüåßüåß",
        "icon": 284
    },
    {
        "code": 1180,
        "1": "–ú–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å üåß",
        "0": "–ú–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å üåß",
        "icon": 293
    },
    {
        "code": 1183,
        "1": "–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å üåß",
        "0": "–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å üåß",
        "icon": 296
    },
    {
        "code": 1186,
        "1": "–í—Ä–µ–º–µ–Ω–∞–º–∏ —É–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å üåß",
        "0": "–í—Ä–µ–º–µ–Ω–∞–º–∏ —É–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å üåß",
        "icon": 299
    },
    {
        "code": 1189,
        "1": "–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å üåßüåß",
        "0": "–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å üåßüåß",
        "icon": 302
    },
    {
        "code": 1192,
        "1": "–í—Ä–µ–º–µ–Ω–∞–º–∏ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å üåßüåß",
        "0": "–í—Ä–µ–º–µ–Ω–∞–º–∏ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å üåßüåß",
        "icon": 305
    },
    {
        "code": 1195,
        "1": "–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å üåßüåßüåß",
        "0": "–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å üåßüåßüåß",
        "icon": 308
    },
    {
        "code": 1198,
        "1": "–°–ª–∞–±—ã–π –ø–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å üåß",
        "0": "–°–ª–∞–±—ã–π –ø–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å üåß",
        "icon": 311
    },
    {
        "code": 1201,
        "1": "–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å üåßüåß",
        "0": "–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å üåßüåß",
        "icon": 314
    },
    {
        "code": 1204,
        "1": "–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º üåß",
        "0": "–ù–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º üåß",
        "icon": 317
    },
    {
        "code": 1207,
        "1": "–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º üåßüå®",
        "0": "–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º üåßüå®",
        "icon": 320
    },
    {
        "code": 1210,
        "1": "–ú–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ üå®",
        "0": "–ú–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ üå®",
        "icon": 323
    },
    {
        "code": 1213,
        "1": "–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ üå®",
        "0": "–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ üå®",
        "icon": 326
    },
    {
        "code": 1216,
        "1": "–ú–µ—Å—Ç–∞–º–∏ —É–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥ üå®",
        "0": "–ú–µ—Å—Ç–∞–º–∏ —É–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥ üå®",
        "icon": 329
    },
    {
        "code": 1219,
        "1": "–£–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥ üå®üå®",
        "0": "–£–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥ üå®üå®",
        "icon": 332
    },
    {
        "code": 1222,
        "1": "–ú–µ—Å—Ç–∞–º–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥ üå®üå®",
        "0": "–ú–µ—Å—Ç–∞–º–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥ üå®üå®",
        "icon": 335
    },
    {
        "code": 1225,
        "1": "–°–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥ üå®üå®üå®",
        "0": "–°–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥ üå®üå®üå®",
        "icon": 338
    },
    {
        "code": 1237,
        "1": "–õ–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å üåß",
        "0": "–õ–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å üåß",
        "icon": 350
    },
    {
        "code": 1240,
        "1": "–ù–µ–±–æ–ª—å—à–æ–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å üåß",
        "0": "–ù–µ–±–æ–ª—å—à–æ–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å üåß",
        "icon": 353
    },
    {
        "code": 1243,
        "1": "–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å üåßüåß",
        "0": "–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å üåßüåß",
        "icon": 356
    },
    {
        "code": 1246,
        "1": "–°–∏–ª—å–Ω—ã–µ –ª–∏–≤–Ω–∏ üåßüåßüåß",
        "0": "–°–∏–ª—å–Ω—ã–µ –ª–∏–≤–Ω–∏ üåßüåßüåß",
        "icon": 359
    },
    {
        "code": 1249,
        "1": "–ù–µ–±–æ–ª—å—à–æ–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º üåß",
        "0": "–ù–µ–±–æ–ª—å—à–æ–π –ª–∏–≤–Ω–µ–≤—ã–π –¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º üåß",
        "icon": 362
    },
    {
        "code": 1252,
        "1": "–£–º–µ—Ä–µ–Ω–Ω—ã–µ –∏–ª–∏ —Å–∏–ª—å–Ω—ã–µ –ª–∏–≤–Ω–µ–≤—ã–µ –¥–æ–∂–¥–∏ —Å–æ —Å–Ω–µ–≥–æ–º üåß",
        "0": "–£–º–µ—Ä–µ–Ω–Ω—ã–µ –∏–ª–∏ —Å–∏–ª—å–Ω—ã–µ –ª–∏–≤–Ω–µ–≤—ã–µ –¥–æ–∂–¥–∏ —Å–æ —Å–Ω–µ–≥–æ–º üåß",
        "icon": 365
    },
    {
        "code": 1255,
        "1": "–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ üå®",
        "0": "–ù–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ üå®",
        "icon": 368
    },
    {
        "code": 1258,
        "1": "–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥ üå®üå®",
        "0": "–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥ üå®üå®",
        "icon": 371
    },
    {
        "code": 1261,
        "1": "–ù–µ–±–æ–ª—å—à–æ–π –ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å üåß",
        "0": "–ù–µ–±–æ–ª—å—à–æ–π –ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å üåß",
        "icon": 374
    },
    {
        "code": 1264,
        "1": "–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å üåßüåß",
        "0": "–£–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å üåßüåß",
        "icon": 377
    },
    {
        "code": 1273,
        "1": "–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö –º–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π ‚õà‚õà",
        "0": "–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö –º–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π ‚õà‚õà",
        "icon": 386
    },
    {
        "code": 1276,
        "1": "–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö —É–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π ‚õà‚õà",
        "0": "–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö —É–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π ‚õà‚õà",
        "icon": 389
    },
    {
        "code": 1279,
        "1": "–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö –º–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ —Å –≥—Ä–æ–∑–æ–π üå®üå©",
        "0": "–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö –º–µ—Å—Ç–∞–º–∏ –Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥ —Å –≥—Ä–æ–∑–æ–π üå®üå©",
        "icon": 392
    },
    {
        "code": 1282,
        "1": "–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö —É–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥ —Å –≥—Ä–æ–∑–æ–π üå®üå©",
        "0": "–í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö —É–º–µ—Ä–µ–Ω–Ω—ã–π –∏–ª–∏ —Å–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥ —Å –≥—Ä–æ–∑–æ–π üå®üå©",
        "icon": 395
    }
]




